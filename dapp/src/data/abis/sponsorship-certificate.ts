export const SponsorshipCertificateABI = [
    "constructor()",
    "event AdminChanged(address previousAdmin, address newAdmin)",
    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
    "event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId)",
    "event BeaconUpgraded(address indexed beacon)",
    "event CertificateEmitted(address indexed sponsor, address indexed sponsorshipReceiver, uint256 amount, uint256 shares, uint256 certificateId)",
    "event CertificateRedeemed(address indexed redeemer, address indexed sponsorshipReceiver, uint256 initialAmount, uint256 redeemedAmount, uint256 certificateId)",
    "event Initialized(uint8 version)",
    "event MetadataUpdate(uint256 _tokenId)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event SponsorshipManagerUpdated(address newManager)",
    "event SponsorshipMetadataFactoryUpdated(address newFactory)",
    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
    "event Upgraded(address indexed implementation)",
    "function approve(address to, uint256 tokenId)",
    "function balanceOf(address owner) view returns (uint256)",
    "function certificateData(uint256) view returns (address receiver, uint256 amount, uint256 redeemed, uint256 shares, bool closed)",
    "function emitCertificate(address _sponsor, address _receiver, uint256 _amount, uint256 _shares)",
    "function getApproved(uint256 tokenId) view returns (address)",
    "function getUserCertificates(address _user) view returns (tuple(uint256 id, address owner, address receiver, uint256 amount, uint256 redeemed, uint256 shares, bool closed)[] owned, tuple(uint256 id, address owner, address receiver, uint256 amount, uint256 redeemed, uint256 shares, bool closed)[] beneficiary)",
    "function initialize()",
    "function isApprovedForAll(address owner, address operator) view returns (bool)",
    "function linkedTokenByIndex(address _user, uint256 _index) view returns (uint256)",
    "function linkedTokens(address _user) view returns (uint256)",
    "function name() view returns (string)",
    "function owner() view returns (address)",
    "function ownerOf(uint256 tokenId) view returns (address)",
    "function proxiableUUID() view returns (bytes32)",
    "function redeemCertificate(uint256 certificateId)",
    "function renounceOwnership()",
    "function safeTransferFrom(address from, address to, uint256 tokenId)",
    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function setSponsorshipCertificateManager(address _sponsorshipManager)",
    "function setSponsorshipCertificateMetadataFactory(address _factory)",
    "function sponsorshipCertificateMetadataFactory() view returns (address)",
    "function sponsorshipManager() view returns (address)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function symbol() view returns (string)",
    "function tokenByIndex(uint256 index) view returns (uint256)",
    "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
    "function tokenURI(uint256 _tokenId) view returns (string)",
    "function totalSupply() view returns (uint256)",
    "function transferFrom(address from, address to, uint256 tokenId)",
    "function transferOwnership(address newOwner)",
    "function upgradeTo(address newImplementation)",
    "function upgradeToAndCall(address newImplementation, bytes data) payable"
];
